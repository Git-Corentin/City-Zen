{% extends 'base.html.twig' %}

{% block title %}{{ name }}{% endblock %}

{% block stylesheets %}
    <style>

        /* Styles pour les conteneurs */
        .tab-content {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-top: none;
            border-radius: 0 0 8px 8px;
        }

        body {
            padding-top: 60px;
            gap: 20px;
            margin: 20px;
        }

        /* Conteneur Flexbox pour aligner le bouton et la carte */
        .container_bis {
            display: block;
        }

        /* Réduire la largeur de la section météo */
        #weather {
            flex: 0 0 30%; /* Prend 30% de la largeur */
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .weather-summary, .weather-details {
            text-align: center;
            color: #333;
        }

        .weather-summary p, .weather-details p {
            margin: 8px 0;
            font-size: 1em;
        }

        #showMoreBtn {
            background-color: black;
            color: white;
            padding: 8px 16px;
            font-size: 0.9em;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 15px;
        }

        .hidden {
            display: none;
        }

        #map {
            height: 65vh; /* Assurez-vous que la carte prend toute la hauteur du conteneur */
            width: 100%;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .filter-container {
            margin: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .filter-container label {
            margin: 5px;
        }

        .filter-buttons {
            margin: 10px;
        }

        .filter-buttons button {
            padding: 10px 20px;
            margin: 5px;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .filter-buttons button:hover {
            background-color: #0056b3;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="city-info-page">
        <h1>Bienvenue à {{ name }}</h1>
    </div>

    <!-- Navigation des onglets -->
    <ul class="nav nav-tabs" id="cityTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" type="button"
                    role="tab" aria-controls="info" aria-selected="true">Informations
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="weather-tab" data-bs-toggle="tab" data-bs-target="#weather" type="button"
                    role="tab" aria-controls="weather" aria-selected="false">Météo
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="map-tab" data-bs-toggle="tab" data-bs-target="#carte" type="button" role="tab"
                    aria-controls="carte" aria-selected="false">Carte
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="currency-tab" data-bs-toggle="tab" data-bs-target="#currency" type="button"
                    role="tab" aria-controls="currency" aria-selected="false">Conversion de Devises
            </button>
        </li>
    </ul>

    <!-- Contenu des onglets -->
    <div class="tab-content" id="cityTabContent">
        <!-- Informations sur la ville -->
        <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
            <h3>Informations sur le pays : {{ country }} ({{ continent }})</h3>
            <img src="{{ flag }}" alt="Drapeau de {{ name }}" height="100px" border="1px">
            <p>Capitale : {{ capital }}</p>
            <p>Monnaie : {{ currency }} ({{ currency_code }})</p>
            <p>Type de gouvernement : {{ government }}</p>
            <p>Population : {{ population }}</p>
            <p>Densité : {{ density }}</p>
            <p>Langues : {{ languages }}</p>
            <p>Espérance de vie : {{ life_expectancy }}</p>
            <p>Plat national : {{ national_dish }}</p>
            <p>Religion : {{ religion }}</p>
            <p>Surface : {{ surface }}</p>
            <p>Température annuelle moyenne : {{ annual_temperature }}</p>
            <p>Indicatif téléphonique : {{ phone_code }}</p>
        </div>

        <!-- Onglet Météo -->
        <div class="tab-pane fade" id="weather" role="tabpanel" aria-labelledby="weather-tab">
            <div id="weather-content">Chargement de la météo...</div>
        </div>

        <!-- Onglet Carte -->
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"/>
        <div class="tab-pane fade" id="carte" role="tabpanel" aria-labelledby="map-tab">
            <div class="filter-container">
                <div class="filter-buttons">
                    <button onclick="checkAll()">Tout cocher</button>
                    <button onclick="uncheckAll()">Tout décocher</button>
                </div>
                <label><input type="checkbox" class="poi-filter" value="restaurant" checked> Restaurants</label> <label><input
                            type="checkbox" class="poi-filter" value="cafe" checked> Cafés</label> <label><input
                            type="checkbox" class="poi-filter" value="bar" checked> Bars</label> <label><input
                            type="checkbox" class="poi-filter" value="pub" checked> Pubs</label> <label><input
                            type="checkbox" class="poi-filter" value="fast_food" checked> Restauration rapide</label>
                <label><input type="checkbox" class="poi-filter" value="bank" checked> Banques</label> <label><input
                            type="checkbox" class="poi-filter" value="atm" checked> Distributeurs automatiques de
                    billets</label> <label><input type="checkbox" class="poi-filter" value="pharmacy" checked>
                    Pharmacies</label> <label><input type="checkbox" class="poi-filter" value="hospital" checked>
                    Hôpitaux</label> <label><input type="checkbox" class="poi-filter" value="clinic" checked> Cliniques</label>
                <label><input type="checkbox" class="poi-filter" value="school" checked> Écoles</label> <label><input
                            type="checkbox" class="poi-filter" value="university" checked> Universités</label>
                <label><input type="checkbox" class="poi-filter" value="library" checked> Bibliothèques</label>
                <label><input type="checkbox" class="poi-filter" value="cinema" checked> Cinémas</label> <label><input
                            type="checkbox" class="poi-filter" value="theatre" checked> Théâtres</label> <label><input
                            type="checkbox" class="poi-filter" value="museum" checked> Musées</label> <label><input
                            type="checkbox" class="poi-filter" value="parking" checked> Parkings</label> <label><input
                            type="checkbox" class="poi-filter" value="fuel" checked> Stations-service</label>
                <label><input type="checkbox" class="poi-filter" value="police" checked> Postes de police</label>
                <label><input type="checkbox" class="poi-filter" value="fire_station" checked> Casernes de
                    pompiers</label> <label><input type="checkbox" class="poi-filter" value="post_office" checked>
                    Bureaux de poste</label> <label><input type="checkbox" class="poi-filter" value="courthouse"
                                                           checked> Tribunaux</label> <label><input type="checkbox"
                                                                                                    class="poi-filter"
                                                                                                    value="place_of_worship"
                                                                                                    checked> Lieux de
                    culte</label> <label><input type="checkbox" class="poi-filter" value="marketplace" checked> Marchés</label>
                <label><input type="checkbox" class="poi-filter" value="supermarket" checked> Supermarchés</label>
                <label><input type="checkbox" class="poi-filter" value="bicycle_rental" checked> Locations de
                    vélos</label> <label><input type="checkbox" class="poi-filter" value="taxi" checked> Stations de
                    taxis</label>
                <button onclick="updatePOIFilters()">Mettre à jour les filtres</button>
            </div>
            <div id="map"></div>
        </div>

        <!-- Onglet Conversion de Devises -->
        <div class="tab-pane fade" id="currency" role="tabpanel" aria-labelledby="currency-tab">
            <h3>Comparer les devises</h3>
            <form id="currency-comparator">
                <label for="currency1">Devise 1 :</label>
                <select id="currency1" name="currency1">
                    <option value="EUR" selected>EUR</option>
                    {% for code in currency_codes %}
                        <option value="{{ code }}" {% if code == currency_code %}selected{% endif %}>{{ code }}</option>
                    {% endfor %}
                </select>

                <label for="currency2">Devise 2 :</label>
                <select id="currency2" name="currency2">
                    {% for code in currency_codes %}
                        <option value="{{ code }}" {% if code == currency_code %}selected{% endif %}>{{ code }}</option>
                    {% endfor %}
                </select>

                <button type="button" onclick="compareCurrencies()">Comparer</button>
            </form>
            <div id="comparisonResult">Sélectionnez deux devises pour voir la comparaison.</div>
        </div>
    </div>


{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-geocoder/2.2.9/leaflet-geocoder.min.js"></script>

    <script>
        const cityName = "{{ name|e('js') }}";
        const latitude = {{ latitude }};
        const longitude = {{ longitude }};

        const apiKey = "779875b69f9002abced6c51cc13f5502";

        async function fetchWeather() {
            const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric&lang=fr`;

            try {
                const response = await fetch(url);
                const weatherData = await response.json();
                console.log("Données météo :", weatherData);

                const weatherContainer = document.getElementById("weather");
                weatherContainer.innerHTML = `
        <div class="weather-summary">
            <h2>Météo actuelle</h2>
            <img src="https://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png" alt="Icone Météo">
            <p><strong>Température :</strong> ${weatherData.main.temp} °C</p>
            <p><strong>Description :</strong> ${weatherData.weather[0].description}</p>
            <p><strong>Vent :</strong> ${weatherData.wind.speed} m/s</p>
            <p><strong>Humidité :</strong> ${weatherData.main.humidity}%</p>
            <button id="showMoreBtn" onclick="toggleDetails()">Afficher plus</button>
        </div>

        <div class="weather-details hidden">
            <p><strong>Température ressentie :</strong> ${weatherData.main.feels_like} °C</p>
            <p><strong>Température min :</strong> ${weatherData.main.temp_min} °C</p>
            <p><strong>Température max :</strong> ${weatherData.main.temp_max} °C</p>
            <p><strong>Pression :</strong> ${weatherData.main.pressure} hPa</p>
            <p><strong>Visibilité :</strong> ${weatherData.visibility} m</p>
            <p><strong>Pluie :</strong> ${weatherData.rain ? `${weatherData.rain["1h"]} mm/h` : 'Aucune précipitation'}</p>
            <p><strong>Couverture nuageuse :</strong> ${weatherData.clouds.all}%</p>
            <p><strong>Lever du soleil :</strong> ${new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString()}</p>
            <p><strong>Coucher du soleil :</strong> ${new Date(weatherData.sys.sunset * 1000).toLocaleTimeString()}</p>
        </div>
        `;
            } catch (error) {
                console.error("Erreur lors de la récupération des données météo :", error);
                document.getElementById("weather").textContent = "Erreur lors de la récupération des données météo.";
            }
        }

        function toggleDetails() {
            const details = document.querySelector('.weather-details');
            const showMoreBtn = document.getElementById("showMoreBtn");
            details.classList.toggle('hidden');
            showMoreBtn.textContent = details.classList.contains('hidden') ? "Afficher plus" : "Afficher moins";
        }

        document.addEventListener("DOMContentLoaded", fetchWeather);

        let map;
        let currentMarkers = [];
        let poiFilters = ["restaurant", "school", "cinema"];

        function initMap() {
            if (map) {
                map.invalidateSize();
                return;
            }
            map = L.map('map').setView([latitude, longitude], 13); // Paris coordinates as an example

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            L.marker([latitude, longitude]).addTo(map)
                .bindPopup(`<b>${cityName}</b><br>Latitude: ${latitude}, Longitude: ${longitude}`)
                .openPopup();
            // Rechercher et afficher des POI autour des coordonnées
            rechercherPOI(latitude, longitude);
        }

        function rechercherPOI(lat, lon) {
            const overpassUrl = `https://overpass-api.de/api/interpreter?data=[out:json];node(around:2000,${lat},${lon})[amenity];out;`;
            fetch(overpassUrl)
                .then(response => response.json())
                .then(data => {
                    currentMarkers.forEach(marker => map.removeLayer(marker));
                    currentMarkers = [];

                    data.elements.forEach(poi => {
                        if (poiFilters.includes(poi.tags.amenity)) {
                            const icon = L.icon({
                                iconUrl: getIconUrl(poi.tags.amenity),
                                iconSize: [25, 25]
                            })
                            const popupContent = `Nom: ${poi.tags.name || 'N/A'}<br>
                                                  Type: ${poi.tags.amenity || 'N/A'}<br>
                                                  Adresse: ${poi.tags['addr:street'] || 'N/A'} ${poi.tags['addr:housenumber'] || ''}<br>
                                                  Ville: ${poi.tags['addr:city'] || 'N/A'}`;
                            const marker = L.marker([poi.lat, poi.lon]).addTo(map)
                                .bindPopup(popupContent);
                            currentMarkers.push(marker);
                        }
                    });
                })
                .catch(error => console.error('Erreur lors de la récupération des POI:', error));
        }

        function getIconUrl(amenity) {
            switch (amenity) {
                case 'restaurant':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/utensils.svg'; // Restaurant icon
                case 'cafe':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/coffee.svg'; // Cafe icon
                case 'bar':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/glass-whiskey.svg'; // Bar icon
                case 'pub':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/beer.svg'; // Pub icon
                case 'fast_food':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/hamburger.svg'; // Fast Food icon
                case 'bank':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/university.svg'; // Bank icon
                case 'atm':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/money-bill-wave.svg'; // ATM icon
                case 'pharmacy':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/first-aid.svg'; // Pharmacy icon
                case 'hospital':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/hospital.svg'; // Hospital icon
                case 'clinic':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/stethoscope.svg'; // Clinic icon
                case 'school':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/school.svg'; // School icon
                case 'university':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/graduation-cap.svg'; // University icon
                case 'library':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/book.svg'; // Library icon
                case 'cinema':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/film.svg'; // Cinema icon
                case 'theatre':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/theater-masks.svg'; // Theatre icon
                case 'museum':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/landmark.svg'; // Museum icon
                case 'parking':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/parking.svg'; // Parking icon
                case 'fuel':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/gas-pump.svg'; // Fuel icon
                case 'police':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/badge.svg'; // Police icon
                case 'fire_station':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/fire.svg'; // Fire Station icon
                case 'post_office':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/envelope.svg'; // Post Office icon
                case 'courthouse':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/gavel.svg'; // Courthouse icon
                case 'place_of_worship':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/praying-hands.svg'; // Place of Worship icon
                case 'marketplace':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/store.svg'; // Marketplace icon
                case 'supermarket':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/cart-arrow-down.svg'; // Supermarket icon
                case 'bicycle_rental':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/bicycle.svg'; // Bicycle Rental icon
                case 'taxi':
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/taxi.svg'; // Taxi icon
                default:
                    return 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/svgs/solid/map-marker-alt.svg'; // Default icon
            }
        }


        function updatePOIFilters() {
            poiFilters = Array.from(document.querySelectorAll('.poi-filter:checked')).map(checkbox => checkbox.value);
            rechercherPOI(latitude, longitude);
        }

        function checkAll() {
            document.querySelectorAll('.poi-filter').forEach(checkbox => checkbox.checked = true);
        }

        function uncheckAll() {
            document.querySelectorAll('.poi-filter').forEach(checkbox => checkbox.checked = false);
        }

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            if (e.target.id === 'map-tab') {
                initMap();
            }
        });

        // Pour initialiser la carte la première fois que l'onglet est cliqué
        $('#map-tab').on('click', function () {
            initMap();
        });


        async function compareCurrencies() {
            const currency1 = document.getElementById("currency1").value;
            const currency2 = document.getElementById("currency2").value;

            if (currency1 === currency2) {
                document.getElementById("comparisonResult").innerHTML = "Les deux devises sont identiques.";
                return;
            }

            try {
                const url = `https://api.exchangerate-api.com/v4/latest/${currency1}`;
                const response = await fetch(url);
                const data = await response.json();

                const rate = data.rates[currency2];
                document.getElementById("comparisonResult").innerHTML = `<p>1 ${currency1} = ${rate} ${currency2}</p>`;
            } catch (error) {
                document.getElementById("comparisonResult").innerHTML = "Erreur lors de la récupération des données.";
            }
        }
    </script>
{% endblock %}
